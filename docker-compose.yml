version: "3.8"
services:
  client:
    container_name: ecollector-prod-client
    build:
      context: ./frontend
      target: production-stage
      dockerfile: Dockerfile
      args:
        - GRAPHQL_URL
        - SERVER_URL
        - SERVER_URL_API
    ports:
      - "4000:4000"
    volumes:
      - /app/node_modules

  server:
    container_name: ecollector-prod-server
    build:
      context: ./api
      target: production
      dockerfile: Dockerfile
    environment:
      - POSTGRES_HOST
      - POSTGRES_PORT
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DB
      - JWT_SECRET
      - JWT_EXPIRATION_TIME
      - SERVER_URL_ORIGIN
    ports:
      - "3000:3000"
    depends_on:
      - postgres
    volumes:
      - ./.data/prod/uploads:/app/uploads
      - /app/node_modules

  postgres:
    image: postgres:14.1
    container_name: ecollector-prod-postgres
    restart: on-failure
    working_dir: /application
    ports:
      - "5432:5432"
    volumes:
      - ./.data/prod/postgres-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_HOST
      - POSTGRES_PORT
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DB

#    pgadmin:
#      image: dpage/pgadmin4
#      container_name: ecollector-pgadmin
#      environment:
#        - PGADMIN_DEFAULT_EMAIL=user@example.com
#        - PGADMIN_DEFAULT_PASSWORD=pass
#      ports:
#        - "5433:80"
#    mailhog:
#      image: mailhog/mailhog:latest
#      container_name: ecollector-mailhog
#      ports:
#        - "8025:8025"
