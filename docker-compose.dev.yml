version: "3.8"
services:
  frontend:
    container_name: ecollector-frontend-dev
    build:
      context: ./frontend
      target: develop-stage
      dockerfile: Dockerfile
    command: /bin/sh -c "yarn && quasar dev"
    restart: always
    environment:
      - GRAPHQL_URL
      - SERVER_URL_API
      - NODE_ENV
    depends_on:
      - api_server
    volumes:
      - ./frontend/:/app
      - /app/node_modules

  api_server:
    container_name: ecollector-api-dev
    build:
      context: ./api
      target: development
      dockerfile: Dockerfile
    command: npm run start:debug
    ports:
      - "9229:9229"
    environment:
      - POSTGRES_HOST
      - POSTGRES_PORT
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DB
      - JWT_SECRET
      - JWT_EXPIRATION_TIME
      - SERVER_URL_ORIGIN
      - API_PORT
      - NGINX_SERVER_NAME
      - SERVER_UPLOADS_URL
      - AWS_REGION
      - AWS_ACCESS_KEY_ID
      - AWS_SECRET_ACCESS_KEY
      - AWS_BUCKET_NAME
      - NODE_ENV=development
    depends_on:
      - postgres
    volumes:
      - ./api/:/app
      - /app/node_modules

  postgres:
    container_name: ecollector-postgres-dev
    image: postgres:14.1
    working_dir: /application
    ports:
      - "5432:5432"
    volumes:
      - /data/postgres:/data/postgres
    environment:
      - POSTGRES_HOST
      - POSTGRES_PORT
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DB
  pgadmin:
    links:
      - postgres:postgres
    container_name: ecollector-pgadmin-dev
    image: dpage/pgadmin4
    environment:
      - PGADMIN_HOST
      - PGADMIN_SUBDOMAIN
      - PGADMIN_DEFAULT_EMAIL
      - PGADMIN_DEFAULT_PASSWORD
    depends_on:
      - postgres
    volumes:
      - /data/pgadmin:/root/.pgadmin

  nginx:
    build:
      context: ./nginx
      target: development
      dockerfile: Dockerfile
    container_name: ecollector-nginx-dev
    volumes:
      - ./nginx:/etc/nginx/templates
    ports:
      - "8080:80"
    depends_on:
      - api_server
      - frontend
    environment:
      - NGINX_SERVER_NAME
      - API_HOST
      - API_PORT
      - FRONTEND_HOST
      - FRONTEND_PORT
      - API_SUBDOMAIN
      - NGINX_MAX_BODY
      - PGADMIN_HOST

#    mailhog:
#      image: mailhog/mailhog:latest
#      container_name: ecollector-mailhog-dev
#      ports:
#        - "8025:8025"
